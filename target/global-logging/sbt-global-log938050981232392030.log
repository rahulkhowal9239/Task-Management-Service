[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 21.0.2)
[debug] Load.defaultLoad until apply took 130.105031ms
[debug]           Load.loadUnit: plugins took 84.11869ms
[debug]           Load.loadUnit: defsScala took 0.378672ms
[debug] [Loading] Scanning directory /home/dell/Downloads/go1percent-master/Task-Management/project
[debug]             Load.loadUnit: mkEval took 7.675897ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/dell/Downloads/go1percent-master/Task-Management/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 50.116491 ms
[info] loading settings for project task-management-build from plugins.sbt ...
[debug]               Load.resolveProject(task-management-build) took 86.413321ms
[debug]             Load.loadTransitive: finalizeProject(Project(id task-management-build, base: /home/dell/Downloads/go1percent-master/Task-Management/project, plugins: List(<none>))) took 151.595108ms
[debug] [Loading] Done in /home/dell/Downloads/go1percent-master/Task-Management/project, returning: (task-management-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4528.664747ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.337922ms
[debug]         Load.loadUnit(file:/home/dell/Downloads/go1percent-master/Task-Management/project/, ...) took 4628.003899ms
[debug]       Load.apply: load took 4768.143952ms
[debug]       Load.apply: resolveProjects took 5.316112ms
[debug]       Load.apply: finalTransforms took 63.584633ms
[debug]       Load.apply: config.delegates took 5.775682ms
[debug]       Load.apply: Def.make(settings)... took 652.84687ms
[debug]       Load.apply: structureIndex took 135.946596ms
[debug]       Load.apply: mkStreams took 1.924229ms
[info] loading project definition from /home/dell/Downloads/go1percent-master/Task-Management/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
